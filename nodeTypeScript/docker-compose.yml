version: '3.0'

services:
  nodetypescript:
    image: nodetypescript
    build: .
    environment:
      NODE_ENV: production
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - 3000:3000
    # Instruct web’s containers to share port 80 via a load-balanced network called webnet
    networks:
      - webnet
  # The visualizer is a standalone service that can run in any app that includes it in the stack.
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  # Used to persist data
  # always runs on the manager, so it’s always using the same filesystem.
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
  networks:
    webnet:
